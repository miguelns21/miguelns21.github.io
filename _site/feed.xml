<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-10-01T17:40:19+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Miguelns21 | Cuaderno de bitácora</title><subtitle>Artículos sobre tecnología, programación y ciberseguridad</subtitle><author><name>Miguelns21</name></author><entry><title type="html">Despliegue en producción de una aplicación Django</title><link href="http://localhost:4000/despliegue-app-django/" rel="alternate" type="text/html" title="Despliegue en producción de una aplicación Django" /><published>2021-10-01T00:00:00+02:00</published><updated>2021-10-01T00:00:00+02:00</updated><id>http://localhost:4000/despliegue-app-django</id><content type="html" xml:base="http://localhost:4000/despliegue-app-django/">&lt;p&gt;En este post trato de explicar de la forma mas rápida y concisa cómo poner en producción una aplicación en Django en un VPS basado en Linux.&lt;/p&gt;

&lt;p&gt;Tómese este post a modo de chuleta con todos los pasos necesarios para el despliegue: desde la instalación de la aplicación partiendo de un repositorio github, la instalación de postgresql, nginx, supervisor, cortafuegos, gunicorn…&lt;/p&gt;

&lt;p&gt;Vamos manos a la obra.&lt;/p&gt;

&lt;h2 id=&quot;1-crear-un-usuario&quot;&gt;1. Crear un usuario&lt;/h2&gt;

&lt;p&gt;Usuario bajo el cual se ejecutará nuestra aplicación:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;adduser jair&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;dar-privilegios-sudo-al-nuevo-usuario&quot;&gt;Dar privilegios sudo al nuevo usuario&lt;/h3&gt;

&lt;p&gt;Editar con:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nano /etc/sudoers&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Y añadir la línea:&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/despliegue-app-django/privilegios-usuarios.png&quot; /&gt;
&lt;/p&gt;

&lt;h2 id=&quot;2-cambiar-el-puerto-ssh-del-servidor&quot;&gt;2. Cambiar el puerto ssh del servidor&lt;/h2&gt;

&lt;p&gt;Editamos:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nano /etc/ssh/sshd_config&lt;/code&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/despliegue-app-django/cambio-puerto.jpeg&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Reiniciar ssh:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;service ssh restart&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-configurar-el-firewall&quot;&gt;3. Configurar el firewall&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ufw status&lt;/code&gt; –&amp;gt; ver el estado&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ufw enable&lt;/code&gt; –&amp;gt; activar firewall&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ufw allow 22&lt;/code&gt; –&amp;gt; permite el paso al puerto 22&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ufw allow ssh&lt;/code&gt; –&amp;gt; permite ssh independientemente del puerto en el que esté configurado.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ufw status numbered&lt;/code&gt; –&amp;gt; lista las reglas con el orden de aplicación.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ufw delete 1&lt;/code&gt; –&amp;gt; borra la regla número 1.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ufw disabe&lt;/code&gt; –&amp;gt; desactiva el firewall.&lt;/p&gt;

&lt;h2 id=&quot;4-clonar-repositorio-del-proyecto-django&quot;&gt;4. Clonar repositorio del proyecto Django&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://github.com/andrestvp/ver.git&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-preparar-el-entorno-python&quot;&gt;5. Preparar el entorno Python&lt;/h2&gt;

&lt;h3 id=&quot;comprobar-si-se-tiene-instalado-virtualenv&quot;&gt;Comprobar si se tiene instalado virtualenv:&lt;/h3&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/despliegue-app-django/virtualenv.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;e instalarlo en su caso:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt-get install virtualenv&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;comprobar-si-está-instalado-python&quot;&gt;Comprobar si está instalado Python&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python3 --version&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;crear-el-entorno-virtual-en-la-raíz-de-la-aplicación&quot;&gt;Crear el entorno virtual en la raíz de la aplicación:&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;virtualenv env -ppython3&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;El argumento -p servirá para crear el entorno virtual en python3 aunque tuvieramos instalado también python2.&lt;/p&gt;

&lt;p&gt;Activamos el entorno virtual con:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;source env/bin/activate&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Instalamos ahora los requerimientos:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;preparar-la-aplicación&quot;&gt;Preparar la aplicación&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python manage.py makemigrations&lt;/code&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python manage.py migrate&lt;/code&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python manage.py createsuperuser&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;6-instalar-postgresql&quot;&gt;6. Instalar Postgresql&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt install postgresql postgresql-contrib&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Configurar postgresql:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo -u postgres psql&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Cambiar la contraseña del usuario postgres:&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/despliegue-app-django/configuracion-postgresql.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Cambiar la codificación de caracteres y la zona horaria:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ALTER ROLE postgres SET client_encoding TO &apos;utf8&apos;;&lt;/code&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ALTER ROLE postgres SET timezone TO &apos;UTC&apos;;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Crear una base de datos:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create database apolo;&lt;/code&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/despliegue-app-django/database-postgresql.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Verificamos en nuestro entorno virtual de python si tenemos instalada la librería de postgresql:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip list&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;En caso de que no:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip install psycopg2-binary&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Cambiamos la configuración del proyecto django a postgresql.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nano config/db.py&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;verificando usuario y contraseña.
De nuevo haremos migraciones y migrate.&lt;/p&gt;

&lt;h2 id=&quot;7-crear-un-fichero-bash-para-ejecutar-nuestra-app-python&quot;&gt;7. Crear un fichero bash para ejecutar nuestra app python&lt;/h2&gt;

&lt;p&gt;Crearemos una carpeta ‘deploy’ en la estructura de nuestra app que contendrá el bash.&lt;/p&gt;

&lt;p&gt;Para saber mas sobre bash hay un buen tutorial en &lt;a href=&quot;https://bioinf.comav.upv.es/courses/unix/scripts_bash.html&quot;&gt;Tutorial Bash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;El script es ‘server.sh’:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;DJANGODIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dirname&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dirname&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;DJANGO_SETTINGS_MODULE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;config.settings
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$DJANGODIR&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;source env&lt;/span&gt;/bin/activate
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DJANGO_SETTINGS_MODULE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DJANGO_SETTINGS_MODULE&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;python manage.py runserver 0:9000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;configurar-supervisor-gestor-de-procesos&quot;&gt;Configurar Supervisor (gestor de procesos)&lt;/h3&gt;

&lt;p&gt;Se encargará de mantener nuestra aplicación siempre corriendo en nuestro servidor.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Instalar supervidor
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;apt-get install supervisor&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Crear el siguiente archivo conf en la ruta &lt;em&gt;/etc/supervisor/conf.d/apolo.conf&lt;/em&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[program:apolo]
command=/home/jair/apolo/deploy/server.sh
autostart=true
autorestart=true
stderr_logfile=/home/jair/apolo/logs/err.log
stdout_logfile=/home/jair/apolo/logs/out.log
user=jair
environment=LANG=en_US.UTF-8,LC_ALL=en_US.UTF-8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Comprobamos ahora si un fichero de supervisor es correcto:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo supervisorctl reread&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Ahora actualizamos las tareas de supervisor:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo supervisorctl update&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Podemos ver todo lo que se está ejecutando con supervisor:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo supervisorctl status&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Para parar el servicio:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo supervisorctl stop apolo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Para iniciarlo:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo supervisorctl start apolo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Para reiniciar una tarea:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo supervisorctl restart apolo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;o todas:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo supervisorctl restart all&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Si hacemos un cambio al script debemos actualizarlo en supervisor:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo supervisorctl update&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;8-configurar-proxy-gunicorn&quot;&gt;8. Configurar proxy gunicorn&lt;/h2&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/despliegue-app-django/estructura-django.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Instalamos en nuestro entorno virtual:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip install gunicorn&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Creamos en la carpeta config un fichero settings llamado &lt;em&gt;production.py&lt;/em&gt; que añadirá un par de variables a nuestro setting original:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;from .settings import *
ALLOWED_HOSTS = [&quot;192.168.0.9&quot;, &quot;midominio.com&quot;, &quot;www.midominio.com&quot;]
DEBUG = False
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Editamos el archivo &lt;em&gt;wsgi.py&lt;/em&gt; para que apunte al nuevo &lt;em&gt;production.py&lt;/em&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/despliegue-app-django/wsgi.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Para comprobar que está funcionando gunicorn:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gunicorn config.wsgi&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;desde la ruta del programa:&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/despliegue-app-django/estado-gunicorn.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Importante&lt;/strong&gt; gunicorn servirá sobre el puerto 8000 por lo que tendremos que para el supervisor con:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo supervisorctl stop apolo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Necesitaremos un fichero bash para que que supervisor levante gunicorn:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;apolo&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;DJANGODIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dirname&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dirname&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;SOCKFILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/tmp/gunicorn-apolo.sock
&lt;span class=&quot;nv&quot;&gt;LOGDIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DJANGODIR&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/logs/gunicorn.log
&lt;span class=&quot;nv&quot;&gt;USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;jair
&lt;span class=&quot;nv&quot;&gt;GROUP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;jair
&lt;span class=&quot;nv&quot;&gt;NUM_WORKERS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;5
&lt;span class=&quot;nv&quot;&gt;DJANGO_WSGI_MODULE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;config.wsgi

&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-frv&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$SOCKFILE&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$DJANGODIR&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$DJANGODIR&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DJANGODIR&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/env/bin/gunicorn &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DJANGO_WSGI_MODULE&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;:application &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$NAME&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--workers&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$NUM_WORKERS&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$USER&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--group&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$GROUP&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--bind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;unix:&lt;span class=&quot;nv&quot;&gt;$SOCKFILE&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--log-level&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;debug &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--log-file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LOGDIR&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Lo llamaremos &lt;em&gt;gunicorn.sh&lt;/em&gt; y estará en la carpeta deploy con permisos de ejecución.&lt;/p&gt;

&lt;h2 id=&quot;9-configurar-web-server&quot;&gt;9. Configurar web server&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt install nginx&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Si usamos firewall habilitamos nginx:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo ufw allow &apos;Nginx HTTP&apos;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo ufw allow &apos;Nginx HTTPS&apos;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Verificamos que está corriendo:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemctl status nginx&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;En el entorno virtual de python ejecutaremos:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python manage.py collectstatic --link --noinput&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;para organizar todas los recursos estáticos en una sola carpeta pero con enlaces simbólicos (sin ocupar espacio en disco).&lt;/p&gt;

&lt;p&gt;Creamos el fichero de nginx en la ruta */etc/nginx/sites-available/apolo.conf’ con el contenido:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;upstream apoloconn &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    server unix:/tmp/gunicorn-apolo.sock &lt;span class=&quot;nv&quot;&gt;fail_timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

server &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    listen 80&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    server_name www.algorisoftprojects.com algorisoftprojects.com 192.168.0.9&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    access_log /home/jair/apolo/logs/nginx-access.log&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    error_log /home/jair/apolo/logs/nginx-error.log&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    location /media/  &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;alias&lt;/span&gt; /home/jair/apolo/media/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    location /static/ &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;alias&lt;/span&gt; /home/jair/apolo/staticfiles/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    location /static/admin/ &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;alias&lt;/span&gt; /home/jair/apolo/staticfiles/admin/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    location / &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
         proxy_set_header X-Forwarded-For &lt;span class=&quot;nv&quot;&gt;$proxy_add_x_forwarded_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
         proxy_set_header Host &lt;span class=&quot;nv&quot;&gt;$http_host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
         proxy_redirect off&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
         proxy_pass http://apoloconn&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    error_page 500 502 503 504 /templates/500.html&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Habilitamos el sitio haciendo un enlace simbólico:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo ln -s /etc/nginx/sites-available/apolo.conf /etc/nginx/sites_enabled/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Comprobamos la configuración creada con:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo nginx -t&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Cambiamos ahora nuesto &lt;em&gt;apolo.conf&lt;/em&gt; de supervisor para que ahora apunto a gunicorn.sh en lugar de a server.sh como lo venía haciendo hasta este momento:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo nano /etc/supervisor/conf.d/apolo.conf&lt;/code&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/despliegue-app-django/cambio-a-gunicorn.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Actualizamos supervisor y reiniciamos nginx:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo supervisorctl update&lt;/code&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo systemctl restart nginx&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Ahora es recomendable eliminar el puerto 8000 de las reglas del cortafueros:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo ufw status numbered&lt;/code&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/despliegue-app-django/actualizacion-ufw.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo ufw delete 2&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;10-instalar-los-certificados-ssl&quot;&gt;10. Instalar los certificados SSL&lt;/h2&gt;

&lt;p&gt;Primero instalaremos el software certbot en el servidor:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt install certbot python3-certbot-nginx&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Una vez instalado:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo certbot --nginx -d midominio.com -d www.midominio.com&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;A la pregunta sobre redireccionar http a https contestamos ‘2’ (si).&lt;/p&gt;

&lt;p&gt;Actualizamos nuestro cortafuegos:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo ufw allow &apos;Nginx Full&lt;/code&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo ufw delete allow &apos;Nginx HTTP&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;11-backup-de-la-base-de-datos&quot;&gt;11. Backup de la Base de datos&lt;/h2&gt;

&lt;p&gt;Crearemos un script bash para hacer el backup de postgresql:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FECHA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; +%d_%m_%Y_%H_%M_%S&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;apolo_&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FECHA&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;.dump
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/home/jair/backup/
&lt;span class=&quot;nv&quot;&gt;USER_DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;postgres
&lt;span class=&quot;nv&quot;&gt;NAME_DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;apolo
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$DIR&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PGPASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;123
&lt;span class=&quot;nb&quot;&gt;chmod &lt;/span&gt;777 &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;procesando la copia de la base de datos&quot;&lt;/span&gt;
pg_dump &lt;span class=&quot;nt&quot;&gt;-U&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$USER_DB&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; localhost &lt;span class=&quot;nt&quot;&gt;--port&lt;/span&gt; 5432 &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$NAME_DB&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;backup terminado&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Añadimos una tarea a cron:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;crontab -e&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Programamos la tarea en un tiempo determinado:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;* * * * * bash /home/jair/apollo/deploy/backup.sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Verificamos la tarea creada:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;crontab -l&lt;/code&gt;&lt;/p&gt;</content><author><name>Miguelns21</name></author><category term="Script" /><category term="Administración" /><category term="Django" /><category term="Python" /><category term="Linux" /><summary type="html">En este post trato de explicar de la forma mas rápida y concisa cómo poner en producción una aplicación en Django en un VPS basado en Linux.</summary></entry><entry><title type="html">Notificaciones en tu propio bot de Telegram</title><link href="http://localhost:4000/notificaciones-en-bot-telegram/" rel="alternate" type="text/html" title="Notificaciones en tu propio bot de Telegram" /><published>2021-09-02T00:00:00+02:00</published><updated>2021-09-02T00:00:00+02:00</updated><id>http://localhost:4000/notificaciones-en-bot-telegram</id><content type="html" xml:base="http://localhost:4000/notificaciones-en-bot-telegram/">&lt;h1 id=&quot;tu-propio-bot-de-notificaciones&quot;&gt;Tu propio bot de notificaciones&lt;/h1&gt;
&lt;p&gt;Si eres programador o administrador de sistemas sabrás que recibir notificaciones unificadas de los servicios que gestiones es siempre una labor muy repetitiva y rutinaria.&lt;/p&gt;

&lt;p&gt;Pues bien en este post voy a describir la forma mas sencilla que he encontrado (de momento) para que puedas mandar notificaciones a tu propio bot de Telegram. Si nunca has creado un bot verás que es un proceso en extremo sencillo.&lt;/p&gt;

&lt;p&gt;Vamos manos a la obra.&lt;/p&gt;

&lt;h2 id=&quot;1-creación-de-tu-propio-bot-en-telegram&quot;&gt;1. Creación de tu propio bot en Telegram&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Accede a tu aplicación de Telegram (web, desktop, móvil, etc.) y busca al usuario @botFather
&lt;img src=&quot;/assets/images/notificaciones_en_bot_telegram/botfather.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Comienza una conversación con él y manda la orden &lt;strong&gt;/newbot&lt;/strong&gt;:
&lt;img src=&quot;/assets/images/notificaciones_en_bot_telegram/botfather_conversacion.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Dale un nombre y un usuario a tu bot:
&lt;img src=&quot;/assets/images/notificaciones_en_bot_telegram/botfather_creacion.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;@BotFather te contestará con un TOKEN que debes guardar en lugar seguro.&lt;/li&gt;
  &lt;li&gt;Busca ahora tu bot y emprende una conversación con él:
&lt;img src=&quot;/assets/images/notificaciones_en_bot_telegram/tu_bot.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-capturar-el-id-del-chat&quot;&gt;2. Capturar el ID del chat&lt;/h2&gt;

&lt;p&gt;Necesitas conocer ahora el ID de tu propio chat para ello puedes usar un navegador y poner la siguiente URL:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;https://api.telegram.org/bot[token]/getUpdates&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;donde token debe ser sustituido por el que ya tenemos.&lt;/p&gt;

&lt;p&gt;Tendremos algo del estilo:&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/notificaciones_en_bot_telegram/botfather_id_chat.png&quot; /&gt;
&lt;/p&gt;

&lt;h2 id=&quot;3-utilización&quot;&gt;3. Utilización&lt;/h2&gt;

&lt;p&gt;Con estos dos datos en nuestro poder podemos probar nuestro bot de la siguiente forma:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;https://api.telegram.org/bot[token]/sendMessage?chat_id[chatId]&amp;amp;parse_mode=Markdown&amp;amp;text=[msg]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Solo tenemos que sustituir &lt;strong&gt;token&lt;/strong&gt; e &lt;strong&gt;chartId&lt;/strong&gt; por nuestros valores, siendo &lt;strong&gt;msg&lt;/strong&gt; el mensaje que queremos mandar a nuestro bot.&lt;/p&gt;

&lt;p&gt;El resultado puede verse a continuación:&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/notificaciones_en_bot_telegram/botfather_pruebas.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Si se quiere usar desde un script en python, aquí tenemos un código de ejemplo:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;emoji_info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;ℹ️&apos;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;emoji_ok&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;✅&apos;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;emoji_warning&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;⚠️&apos;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;emoji_error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;❌️&apos;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sendNotification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;notification_body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;notification_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emoji&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bot_token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;1907783307:AAGqkGE39tJPhD7XXXXXXXXXXXXXX&apos;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bot_chatID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;262XXXXX&apos;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emoji&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos; *&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;notification_title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;*&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;notification_body&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;send_text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;https://api.telegram.org/bot&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bot_token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;/sendMessage?chat_id=&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bot_chatID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;&amp;amp;parse_mode=Markdown&amp;amp;text=&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sendNotification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Cuerpo del mensaje&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;Mi título del mensaje&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emoji_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ok&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Mensaje enviado correctamente&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Tendremos que sustituir bot_token y bot_chatID por nuestros valores.&lt;/p&gt;

&lt;p&gt;El resultado final:&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/notificaciones_en_bot_telegram/botfather_resultado.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;El mundo de los bot es extremadamente amplio y puede resultar muy complejo pero para cubrir exactamente esta necesitad de notificaciones, lo tenemos resuelto.&lt;/p&gt;</content><author><name>Miguelns21</name></author><category term="Script" /><category term="Telegram" /><category term="Python" /><summary type="html">Si eres programador o administrador de sistemas sabrás que recibir notificaciones unificadas de los servicios que gestiones es siempre una labor muy repetitiva y rutinaria.</summary></entry><entry><title type="html">Linux Smart Enumeration - Herramienta para pentesting</title><link href="http://localhost:4000/linux-smart-enumeration/" rel="alternate" type="text/html" title="Linux Smart Enumeration - Herramienta para pentesting" /><published>2021-08-25T00:00:00+02:00</published><updated>2021-08-25T00:00:00+02:00</updated><id>http://localhost:4000/linux-smart-enumeration</id><content type="html" xml:base="http://localhost:4000/linux-smart-enumeration/">&lt;p&gt;&lt;img src=&quot;/assets/images/linux-smart-enumeration/lse_level0.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Empezamos con unos oneliners rápidos:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wget &quot;https://github.com/diego-treitos/linux-smart-enumeration/raw/master/lse.sh&quot; -O lse.sh;chmod 700 lse.sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl &quot;https://github.com/diego-treitos/linux-smart-enumeration/raw/master/lse.sh&quot; -Lo lse.sh;chmod 700 lse.sh&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;linux-smart-enumeration&quot;&gt;linux-smart-enumeration&lt;/h1&gt;
&lt;p&gt;Linux Smart Enumeration - Herramienta para pentesting&lt;/p&gt;

&lt;p&gt;Este proyecto está inspirado por https://github.com/rebootuser/LinEnum y usa la mayoría de sus tests.&lt;/p&gt;

&lt;p&gt;A diferencia de LinEnum, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lse&lt;/code&gt; trata de mostrar la información ordenada desde el punto de vista de su importancia en cuanto a privilegios se refiere.&lt;/p&gt;

&lt;h2 id=&quot;qué-es&quot;&gt;¿Qué es?&lt;/h2&gt;

&lt;p&gt;Este script de shell muestra información relevante sobre la seguridad de un sistema linux local ayudándo a escalar privilegios.&lt;/p&gt;

&lt;p&gt;También puede &lt;strong&gt;monitorizar procesos para descubrir ejecuciones de procesos recurrentes&lt;/strong&gt;. Monitoriza al mismo tiempo que ejecuta todos los demás test. Por defecto monitoriza durante 1 minuto pero puede cambiarse este tiempo a través del parámetro &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-p&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Tiene 3 niveles de información a mostrar para controlar cuanta información se quiere ver.&lt;/p&gt;

&lt;h2 id=&quot;cómo-se-usa&quot;&gt;¿Cómo se usa?&lt;/h2&gt;

&lt;p&gt;La idea es obtener información gradualmente.&lt;/p&gt;

&lt;p&gt;Primero se debería ejecutar como &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./lse.sh&lt;/code&gt;. Si se ven algunos &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yes!&lt;/code&gt;, probablemente sea información interesante para trabajar sobre ella.&lt;/p&gt;

&lt;p&gt;Si no, se puede intentar ejecutar con el primer nivel de salida del comando &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;level 1&lt;/code&gt; con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./lse.sh -l1&lt;/code&gt; y se mostrará mas información interesante.&lt;/p&gt;

&lt;p&gt;Si esto tampoco ayuda, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;level 2&lt;/code&gt; mostrará toda la información recolectada sobre el servicio usando &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./lse.sh -l2&lt;/code&gt;. En este caso será importante usarlo de la siguiente forma &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./lse.sh -l2 | less -r&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Se pueden seleccionar qué tipo de tests ejecutar a través del parámetros &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-s&lt;/code&gt;. Por ejemplo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./lse.sh -l2 -s usr010,net,pro&lt;/code&gt; ejecutará el teste &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;usr010&lt;/code&gt; y todos los tests de la sección &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;net&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pro&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Use: ./lse.sh [options]

 OPTIONS
  -c           Disable color
  -i           Non interactive mode
  -h           This help
  -l LEVEL     Output verbosity level
                 0: Show highly important results. (default)
                 1: Show interesting results.
                 2: Show all gathered information.
  -s SELECTION Comma separated list of sections or tests to run. Available
               sections:
                 usr: User related tests.
                 sud: Sudo related tests.
                 fst: File system related tests.
                 sys: System related tests.
                 sec: Security measures related tests.
                 ret: Recurren tasks (cron, timers) related tests.
                 net: Network related tests.
                 srv: Services related tests.
                 pro: Processes related tests.
                 sof: Software related tests.
                 ctn: Container (docker, lxc) related tests.
               Specific tests can be used with their IDs (i.e.: usr020,sud)
  -e PATHS     Comma separated list of paths to exclude. This allows you
               to do faster scans at the cost of completeness
  -p SECONDS   Time that the process monitor will spend watching for
               processes. A value of 0 will disable any watch (default: 60)
  -S           Serve the lse.sh script in this host so it can be retrieved
               from a remote host.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;demo&quot;&gt;Demo&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/miguelns21/linux-smart-enumeration/raw/master/screenshots/lse.gif&quot; alt=&quot;LSE Demostración&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;level-0-default-ejemplo-de-salida&quot;&gt;Level 0 (default) ejemplo de salida&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/miguelns21/linux-smart-enumeration/master/screenshots/lse_level0.png&quot; alt=&quot;LSE level0&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;ejemplos&quot;&gt;Ejemplos&lt;/h2&gt;

&lt;p&gt;Ejecución directa en una línea&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bash &amp;lt;(wget -q -O - https://raw.githubusercontent.com/diego-treitos/linux-smart-enumeration/master/lse.sh) -l2 -i&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bash &amp;lt;(curl -s https://raw.githubusercontent.com/diego-treitos/linux-smart-enumeration/master/lse.sh) -l1 -i&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;La fuente original de esta información en inglés se puede encontrar en &lt;a href=&quot;https://hakin9.org/linux-smart-enumeration/&quot;&gt;hakin9.org&lt;/a&gt;.&lt;/p&gt;</content><author><name>Miguelns21</name></author><category term="Script" /><category term="Linux" /><category term="Pentesting" /><summary type="html">Programar un script que hace algo pero que es difícil comprobar el resultado es una práctica poco segura.</summary></entry><entry><title type="html">Intranet/Nextcloud (Parte 4/4)</title><link href="http://localhost:4000/creacion-intranet-nextcloud-4/" rel="alternate" type="text/html" title="Intranet/Nextcloud (Parte 4/4)" /><published>2021-08-18T00:00:00+02:00</published><updated>2021-08-18T00:00:00+02:00</updated><id>http://localhost:4000/creacion-intranet-nextcloud-4</id><content type="html" xml:base="http://localhost:4000/creacion-intranet-nextcloud-4/">&lt;h1 id=&quot;consideraciones-finales&quot;&gt;Consideraciones finales&lt;/h1&gt;

&lt;p&gt;Programar un script que hace algo pero que es difícil comprobar el resultado es una práctica poco segura.&lt;/p&gt;

&lt;p&gt;Nuestros scripts incorporan la salida de todos los procesos que llevan a cabo a un fichero que se situará en la raíz del la zona del usuario administrador.&lt;/p&gt;

&lt;p&gt;Este fichero de log registra todos los movimientos que el script ha llevado a cabo o no por distintos motivos. Los principales controles que registra son:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Incorrecto formato del fichero de clientes CSV&lt;/li&gt;
  &lt;li&gt;Creación de usuario correcta o no.&lt;/li&gt;
  &lt;li&gt;Factura repartida a qué usuario.&lt;/li&gt;
  &lt;li&gt;etc.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Espero que estos scripts puedan servir de base o ayudar al desarrollo de una versión adaptada a las necesidades de cualquier pequeña empresa.&lt;/p&gt;

&lt;p&gt;Los scripts están disponibles en mi &lt;a href=&quot;https://github.com/miguelns21/NextIntranet&quot;&gt;Github&lt;/a&gt;.&lt;/p&gt;</content><author><name>Miguelns21</name></author><category term="Script" /><category term="Intranet" /><category term="Nextcloud" /><summary type="html">Programar un script que hace algo pero que es difícil comprobar el resultado es una práctica poco segura.</summary></entry><entry><title type="html">Intranet/Nextcloud (Parte 3/4)</title><link href="http://localhost:4000/creacion-intranet-nextcloud-3/" rel="alternate" type="text/html" title="Intranet/Nextcloud (Parte 3/4)" /><published>2021-08-17T00:00:00+02:00</published><updated>2021-08-17T00:00:00+02:00</updated><id>http://localhost:4000/creacion-intranet-nextcloud-3</id><content type="html" xml:base="http://localhost:4000/creacion-intranet-nextcloud-3/">&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/creacion-intranet-nextcloud/nextcloud-square-logo.png&quot; /&gt;
&lt;/p&gt;

&lt;h1 id=&quot;repartir-facturas&quot;&gt;Repartir Facturas&lt;/h1&gt;

&lt;p&gt;Nuestro segundo y último script “repartir_ficheros.py” tiene como misión repartir los ficheros que el administrador suba a la carpeta “Reparto_Factura” de su zona de administración a todos los usuarios del sistema que les correspondan.&lt;/p&gt;

&lt;p&gt;La lógica debe ser que el nombre del fichero a repartir comience con el código del usuario en nuestra intranet.&lt;/p&gt;

&lt;p&gt;Por ejemplo: la factura “1000-noviembre.pdf” moverá dicho fichero a la zona de usuario con código 1000.&lt;/p&gt;

&lt;p&gt;El administrador puede crear una estructura de carpetas en su carpeta “Reparto_Factura“ que se replicará a la zona del usuario. Por ejemplo:&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/creacion-intranet-nextcloud/captura-de-pantalla-2021-08-14-a-las-17.42.27.png&quot; /&gt;
&lt;/p&gt;

&lt;h2 id=&quot;cron&quot;&gt;Cron&lt;/h2&gt;

&lt;p&gt;Al igual que el script de creación de usuario, nuestro script de reparto se debe programar con la frecuencia estimada por el administrador de la plataforma atendiendo a sus necesidades. Esto es, si las facturas se suben con poca frecuencia, no tiene sentido establecer la programación muy frecuentemente.&lt;/p&gt;

&lt;p&gt;En el caso de Hostens, el panel de control nos ofrece un asistente para los trabajos de cron como se muestra a continuación:&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/creacion-intranet-nextcloud/captura-de-pantalla-2021-08-14-a-las-17.48.30.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Fichero de creación de usuarios programado cada 5 minutos.&lt;/p&gt;</content><author><name>Miguelns21</name></author><category term="Script" /><category term="Intranet" /><category term="Nextcloud" /><summary type="html">Nuestro segundo y último script “repartir_ficheros.py” tiene como misión repartir los ficheros que el administrador suba a la carpeta “Reparto_Factura” de su zona de administración a todos los usuarios del sistema que les correspondan.</summary></entry><entry><title type="html">Intranet/Nextcloud (Parte 2/4)</title><link href="http://localhost:4000/creacion-intranet-nextcloud-2/" rel="alternate" type="text/html" title="Intranet/Nextcloud (Parte 2/4)" /><published>2021-08-16T00:00:00+02:00</published><updated>2021-08-16T00:00:00+02:00</updated><id>http://localhost:4000/creacion-intranet-nextcloud-2</id><content type="html" xml:base="http://localhost:4000/creacion-intranet-nextcloud-2/">&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/creacion-intranet-nextcloud/nextcloud-square-logo.png&quot; /&gt;
&lt;/p&gt;

&lt;h1 id=&quot;importar-usuarios&quot;&gt;Importar Usuarios&lt;/h1&gt;

&lt;p&gt;Nuestro primer script “importar_usuario.py” tiene como misión importar los ficheros CSV que el administrador suba a la carpeta Clientes_CSV de nuestra intranet. Los pasos que sigue en script son:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Crea el usuario en NextCloud.&lt;/li&gt;
  &lt;li&gt;Manda un email a dicho usuario notificándole su usuario y contraseña aleatoria que el usuario puede/debe cambiar en el primer acceso.&lt;/li&gt;
  &lt;li&gt;Crea la estructura de carpetas en la zona de usuario.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;formato-del-fichero&quot;&gt;Formato del fichero&lt;/h2&gt;

&lt;p&gt;El fichero de clientes con extensión csv debe tener la siguiente estructura:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-csv&quot;&gt;Abonado;Razón social Cliente;Email empresa
1000;Pepe;miguelns@gmail.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El primero (1000) es el código que recibirá el cliente en nuestra plataforma. Puede ser numérico o alfanumérico. En cualquier caso dicho código será la primera cadena del nombre del fichero de facturas a repartir.&lt;/p&gt;

&lt;p&gt;En nuestro ejemplo, las facturas para el usuario 1000 deben empezar por 1000_loquesea.pdf.&lt;/p&gt;

&lt;p&gt;Los demás campos se explican por sí mismos.&lt;/p&gt;

&lt;h2 id=&quot;cron&quot;&gt;Cron&lt;/h2&gt;

&lt;p&gt;Nuestro script se debe programar con la frecuencia estimada por el administrador de la plataforma atendiendo a sus necesidades. Esto es, si la necesidad de crear clientes nuevos no fuera mucha no tiene sentido establecer la programación con demasiada frecuencia.&lt;/p&gt;

&lt;p&gt;En el caso de Hostens, el panel de control nos ofrece un asistente para los trabajos de cron como se muestra a continuación:&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/creacion-intranet-nextcloud/captura-de-pantalla-2021-08-14-a-las-17.33.20.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Fichero de creación de usuarios programado cada 5 minutos.&lt;/p&gt;</content><author><name>Miguelns21</name></author><category term="Script" /><category term="Intranet" /><category term="Nextcloud" /><summary type="html">Nuestro primer script “importar_usuario.py” tiene como misión importar los ficheros CSV que el administrador suba a la carpeta Clientes_CSV de nuestra intranet.</summary></entry><entry><title type="html">Intranet/Nextcloud (Parte 1/4)</title><link href="http://localhost:4000/creacion-intranet-nextcloud-1/" rel="alternate" type="text/html" title="Intranet/Nextcloud (Parte 1/4)" /><published>2021-08-15T00:00:00+02:00</published><updated>2021-08-15T00:00:00+02:00</updated><id>http://localhost:4000/creacion-intranet-nextcloud-1</id><content type="html" xml:base="http://localhost:4000/creacion-intranet-nextcloud-1/">&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/creacion-intranet-nextcloud/captura-de-pantalla-2021-08-14-a-las-16.11.28.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Nuestra Intranet parte de una instalación de &lt;em&gt;Nextcloud&lt;/em&gt; con varios retoques.&lt;/p&gt;

&lt;p&gt;Cualquier proveedor de internet tiene en su panel cpanel/plesk una forma de instalar Nextcloud muy sencilla. En nuestro caso el hosting de pruebas está en 
&lt;a href=&quot;https://www.hostens.com&quot;&gt;hostens&lt;/a&gt; que para las pruebas iniciales está bien.&lt;/p&gt;

&lt;h2 id=&quot;instalación&quot;&gt;Instalación&lt;/h2&gt;

&lt;p&gt;La instalación no nos llevará mas que unos cuantos clics. De esta forma ya tenemos nuestro Nextcloud instalado&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/creacion-intranet-nextcloud/captura-de-pantalla-2021-08-14-a-las-16.14.29.png&quot; /&gt;
&lt;/p&gt;

&lt;h2 id=&quot;configuración&quot;&gt;Configuración&lt;/h2&gt;

&lt;p&gt;Una vez instalado necesitaremos acceder a él y crear el usuario y la contraseña que será el administrador de nuestra intranet. En este momento tenemos Nextcloud instalado pero todavía nos quedan unos ajustes para adaptarlo a nuestras necesidades de Intranet.&lt;/p&gt;

&lt;h3 id=&quot;1-ponerlo-en-castellano-y-habilitar-nuestro-dominio&quot;&gt;1. Ponerlo en castellano y habilitar nuestro dominio&lt;/h3&gt;

&lt;p&gt;Tenemos que modificar/añadir un par de claves que se encuentran en el archivo config/config.ini del directorio de nuestra instalación.&lt;/p&gt;

&lt;p&gt;Hostens nos provee en el panel de control de un administrador de ficheros con el que podemos hacer los cambios:&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/creacion-intranet-nextcloud/captura-de-pantalla-2021-08-14-a-las-16.25.44.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Aquí retocaremos el apartado dominio y el lenguaje:&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/creacion-intranet-nextcloud/captura-de-pantalla-2021-08-14-a-las-16.27.26-1.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;En el array ponemos los dominios desde los que llamaremos a nextcloud.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/creacion-intranet-nextcloud/captura-de-pantalla-2021-08-14-a-las-16.27.36.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Para que todo aparezca en castellano.&lt;/p&gt;

&lt;h3 id=&quot;2-estructura-de-carpetas-para-los-usuarios&quot;&gt;2. Estructura de carpetas para los usuarios&lt;/h3&gt;

&lt;p&gt;También hay que preparar el /core/skeleton para que al crear el usuario nos aseguremos que la estructura es correcta.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/creacion-intranet-nextcloud/captura-de-pantalla-2021-08-14-a-las-16.35.54.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Cada usuario tendrá la carpeta Factura en su home.&lt;/p&gt;

&lt;h3 id=&quot;3-cron&quot;&gt;3. Cron&lt;/h3&gt;

&lt;p&gt;Nextcloud recomienda en su instalación que se programe una tarea de cron en el sistema que lo albergue para su correcto funcionamiento. Aunque existen varias posibilidades, lo mejor, cron.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/creacion-intranet-nextcloud/captura-de-pantalla-2021-08-14-a-las-16.38.35.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Seleccionamos cron en los ajustes del administrador.&lt;/p&gt;

&lt;p&gt;Hostens nos provee también de una interfaz muy amigable para establecer la tarea de cron de Nextcloud cada 5 minutos.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/creacion-intranet-nextcloud/captura-de-pantalla-2021-08-14-a-las-16.44.19.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Acceso a Cron en el panel de Hostens.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/creacion-intranet-nextcloud/captura-de-pantalla-2021-08-14-a-las-16.45.51.png&quot; /&gt;
&lt;/p&gt;

&lt;h3 id=&quot;4-configuración-de-nuestro-correo-saliente&quot;&gt;4. Configuración de nuestro correo saliente&lt;/h3&gt;

&lt;p&gt;Necesitaremos una cuenta de email que será el remitente de cuantos correos mandemos a los clientes. Se ha de configurar en los ajustes del administrador de NextCloud (Ajustes básicos):&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/creacion-intranet-nextcloud/captura-de-pantalla-2021-08-14-a-las-16.48.20.png&quot; /&gt;
&lt;/p&gt;

&lt;h3 id=&quot;5-configurar-las-aplicaciones-instaladas&quot;&gt;5. Configurar las aplicaciones instaladas&lt;/h3&gt;

&lt;p&gt;Por defecto, Nextcloud incluye muchas aplicaciones instaladas que en nuestro caso no son necesarias.&lt;/p&gt;

&lt;p&gt;En el panel de control del administrador debemos dejar exclusivamente las aplicaciones que se describen en la siguiente captura:&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/creacion-intranet-nextcloud/captura-de-pantalla-2021-08-14-a-las-16.52.10.png&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;Aplicaciones instaladas en nuestra intranet.&lt;/p&gt;

&lt;p&gt;Todas las demás aplicaciones no aportan para nuestro caso. Las dejaremos deshabilitadas.&lt;/p&gt;

&lt;h3 id=&quot;6-estructura-del-usuario-administrador&quot;&gt;6. Estructura del usuario administrador&lt;/h3&gt;

&lt;p&gt;El usuario administrador debe tener una configuración de carpetas como la que se describe en la siguiente imagen:&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/creacion-intranet-nextcloud/captura-de-pantalla-2021-08-14-a-las-16.55.17.png&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;Estructura de las carpeta en la zona de administración.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;**Clientes_CSV : Contendrá los ficheros csv con los clientes que nuestros scripts crearán en NextCloud en un formato que se verá mas adelante.&lt;/li&gt;
  &lt;li&gt;**Plantillas_Email: Nuestros scripts pueden mandar correos con un formato preestablecido o bien leer los ficheros html de esta carpeta para mandar emails personalizados.&lt;/li&gt;
  &lt;li&gt;**Reparto_Facturas: El administrador subirá a esta carpeta los ficheros de facturas con formato pdf que nuestros scripts repartirán a los clientes que les correspondan.&lt;/li&gt;
  &lt;li&gt;**scripts: Contiene los scripts python del programa.&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Miguelns21</name></author><category term="Script" /><category term="Intranet" /><category term="Nextcloud" /><summary type="html">Nuestra Intranet parte de una instalación de Nextcloud con varios retoques. Cualquier proveedor de internet tiene en su panel cpanel/plesk una forma de instalar Nextcloud muy sencilla.</summary></entry><entry><title type="html">Creación de Intranet/Nextcloud</title><link href="http://localhost:4000/creacion-intranet-nextcloud/" rel="alternate" type="text/html" title="Creación de Intranet/Nextcloud" /><published>2021-08-14T00:00:00+02:00</published><updated>2021-08-14T00:00:00+02:00</updated><id>http://localhost:4000/creacion-intranet-nextcloud</id><content type="html" xml:base="http://localhost:4000/creacion-intranet-nextcloud/">&lt;p&gt;&lt;img src=&quot;/assets/images/creacion-intranet-nextcloud/captura-de-pantalla-2021-08-14-a-las-12.26.26.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hace un tiempo desarrollé unos scripts en Python para cubrir una necesidad que puede surgir en una empresa pequeña con pocos recursos como es la de dotar a sus propios clientes de un espacio donde éstos puedan consultar sus facturas y descargarlas.&lt;/p&gt;

&lt;h2 id=&quot;acciones&quot;&gt;Acciones&lt;/h2&gt;

&lt;p&gt;Los scripts que funcionarán prácticamente en cualquier hosting o máquina dedicada efectuarán las siguientes acciones:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Creación de usuarios importando un script csv sencillo. Se mandará al usuario un email con los datos para el primer acceso incluyendo una clave aleatoria.&lt;/li&gt;
  &lt;li&gt;Reparto de las facturas en pdf que la empresa subirá a su zona de administración con el formato id_factura.pdf. El sistema notificará al usuario por email de nuevas facturas en su zona de usuario.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ventajas&quot;&gt;Ventajas&lt;/h2&gt;

&lt;p&gt;Las ventajas de este sistema son muchas:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Aprovechar la infraestructura que crea una software open source como es Nextcloud: seguridad de los datos y simplicidad de manejo.&lt;/li&gt;
  &lt;li&gt;Los documentos sensibles como son las facturas “no viajan” al correo electrónico del usuario, sino que es el cliente final el que accede a sus facturas.
Aislamiento. Aunque Nextcloud es una plataforma en la que se fomenta el intercambio de información entre usuarios también se puede adaptar para que los usuarios estén aislados de los otros.&lt;/li&gt;
  &lt;li&gt;A través de un fichero de configuración de texto, el administrador puede adaptar distintos parámetros de su hosting como son los distintos paths o la configuración de su correo saliente.&lt;/li&gt;
  &lt;li&gt;Los scripts en Python serán publicados en Github para que se puedan adaptar a otras necesidades si así se requiere.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A través de una serie de próximos artículos iré explicando desde la configuración inicial de Nextcloud hasta la configuración de los scripts y su programación en cron.&lt;/p&gt;</content><author><name>Miguelns21</name></author><category term="Script" /><category term="Intranet" /><category term="Nextcloud" /><summary type="html">Hace un tiempo desarrollé unos scripts en Python para cubrir una necesidad que puede surgir en una empresa pequeña con pocos recursos como es la de dotar a sus propios clientes de un espacio donde éstos puedan consultar sus facturas y descargarlas.</summary></entry></feed>